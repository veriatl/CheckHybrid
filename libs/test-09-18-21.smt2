(set-logic QF_NRA)
(declare-fun Kp () Real)
(declare-fun zeta () Real)
(declare-fun omega_n () Real)
(declare-fun overshoot () Real)
(declare-fun temp () Real)
(assert (= (* zeta zeta) (- (/ (/ 43.0 1000.0) Kp) (/ 13.0 200.0))))
(assert (= (* omega_n omega_n) (* (/ 1129.0 100.0) Kp)))
(assert (>= zeta 0.0))
(assert (let ((a!1 (= overshoot
              (^ (/ 271.0 100.0) (/ (* (- (/ 157.0 50.0)) zeta) temp)))))
(let ((a!2 (and (= (* temp temp) (- 1.0 (* zeta zeta))) a!1)))
(let ((a!3 (and (=> (and (< zeta 1.0) (>= zeta 0.0)) a!2)
                (=> (>= zeta 1.0) (= overshoot 0.0)))))
  (not (=> a!3 (= overshoot 0.0)))))))
(check-sat)
(get-model)
(exit)